BveTs Map 2.00

Curve.SetGauge(1.067);
Sound.Load('sound.txt');
Station.Load('Stations103M.txt');
Structure.Load('Structures.txt');
Signal.Load('Signals.csv');
Signal.SpeedLimit(0,25,55,75,110);
include'mapsignals.txt';
#RollingNoise Setting(E129series)-> 0=longrail 2=25mrail 3=bridge 4=tunnel
0;

	Background.Change('Bg_mt');
	Adhesion.Change(0.35, 0, 0.01);
	Curve.SetGauge(1.067);
	Track['ground'].Position(0,-14,0,0);
	Repeater['grassland1'].Begin('ground',0,0,0, , , ,1,,49, 'grassland');
	Track['1'].Position(0,0,0,0);
	Repeater['slabRail'].Begin0('1',1,4.99,5,'slabrail');
	//SpeedLimit.Begin(110);
	Background.Change(''); 	
	Light.Ambient(1,1,1);
	CabIlluminance.Set(1);
	rollingNoise.Change(0);
	Track['2'].Position(4,0,0,0);
	Repeater['slabRail2'].Begin0('2',1,4.99,5,'slabrail');
	Track['3'].Position(-8,0,0,0);
	Repeater['slabRail3'].Begin0('3',1,4.99,5,'slabrail');
	Track['4'].Position(12,0,0,0);
	Repeater['slabRail4'].Begin0('4',1,4.99,5,'slabrail');
	Track['mountain'].Position(-60,40,0,0);
	Track['mountainR'].Position(60,30,0,0);
	Repeater['glasswallR1'].Begin('4',9,0, 0, , , ,3,,5, 'glasswallL');
	Repeater['glasswallL1'].Begin('3',-9,0, 0, , , ,3,,5, 'glasswallR');
	Repeater['glasswallR2'].Begin('4',-5.401,1.6, 0, , , ,3,,5, 'glasswallR');
	Repeater['glasswallL2'].Begin('3',5.401,1.6, 0, , , ,3,,5, 'glasswallL');
	Repeater['modernformL1'].Begin('1',0, 0, 0, , , ,3,,5, 'modernformL');
	Repeater['modernformL2'].Begin('4',0, 0, 0, , , ,3,,5, 'modernformL');
	Repeater['modernformR1'].Begin('2',0, 0, 0, , , ,3,,5, 'modernformR');
	Repeater['modernformR2'].Begin('3',0, 0, 0, , , ,3,,5, 'modernformR');
	Repeater['modernformgroundL1'].Begin('1',0.7,0,0, , , ,3,,5, 'modernformgroundL');
	Repeater['modernformgroundL2'].Begin('4',0.7,0,0, , , ,3,,5, 'modernformgroundL');
	Repeater['kasen1'].Begin0('1',3,39.99,40,'kasen');
	Repeater['kasen2'].Begin0('2',3,39.99,40,'kasen');
        Repeater['kasen3'].Begin0('3',3,39.99,40,'kasen');
	Repeater['kasen4'].Begin0('4',3,39.99,40,'kasen');
	Fog.Interpolate(0.004,0.8,0.8,0.8);
10;
	Station['1'].Put(-1,-5,5);
	Background.Change('Bg_mt');
	Structure['stop'].Put('1',2,-0.3,0,,,,,);
30;
	Repeater['modernformL1'].End();
	Repeater['modernformL2'].End();
	Repeater['modernformR1'].End();
	Repeater['modernformR2'].End();
	Repeater['modernformgroundL1'].End();
	Repeater['modernformgroundL2'].End();
	Repeater['glasswallR1'].End();
	Repeater['glasswallL1'].End();
	Repeater['glasswallR2'].End();
	Repeater['glasswallL2'].End();
	Repeater['pier1'].Begin('3',0, 0, 0, , , ,3,,20, 'pier');
	Repeater['pier2'].Begin('4',0, 0, 0, , , ,3,,20, 'pier');
	Repeater['concbridge1'].Begin('1',0,-0.25, 0, , , ,3,,5, 'concbridge');
	Repeater['concbridge2'].Begin('2',0,-0.25, 0, , , ,3,,5, 'concbridge');
	Repeater['concbridge3'].Begin('3',0,-0.25, 0, , , ,3,,5, 'concbridge');
	Repeater['concbridge4'].Begin('4',0,-0.25, 0, , , ,3,,5, 'concbridge');
	Repeater['bridgewallL1'].Begin('1',-0.2,-0.5,0, , , ,3,,5, 'bridgewallL');
	Repeater['bridgewallR1'].Begin('2',0.2,-0.5,0, , , ,3,,5, 'bridgewallR');
	Repeater['bridgewallL2'].Begin('3',-0.2,-0.5,0, , , ,3,,5, 'bridgewallL');
	Repeater['bridgewallR2'].Begin('3',0.2,-0.5,0, , , ,3,,5, 'bridgewallR');
	Repeater['bridgewallL3'].Begin('4',-0.2,-0.5,0, , , ,3,,5, 'bridgewallL');
	Repeater['bridgewallR3'].Begin('4',0.2,-0.5,0, , , ,3,,5, 'bridgewallR');
	Repeater['pole1'].Begin0('1',3,39.99,40,'bridgepole');
	Repeater['pole3'].Begin0('3',3,39.99,40,'bridgepole');
	Repeater['pole2'].Begin('2',0,0,0, ,180, ,3,,40, 'bridgepole');
	Repeater['pole4'].Begin('4',0,0,0, ,180, ,3,,40, 'bridgepole');
	Repeater['mountain'].Begin0('mountain',3,49.99,50, 'mount');
	Repeater['mountainR'].Begin0('mountainR',3,49.99,50, 'mountR');
	Structure['formendfence'].Put('1',-4,1.2,-2.3,,,,,);
	Structure['formendfence'].Put('4',-4,1.2,-2.3,,,,,);
50;
	Track['3'].Position(-8,-0.01,1000,0);
	Track['4'].Position(12,-0.01,-1000,0);
125;
	Repeater['bridgewallL1'].End();
	Repeater['bridgewallR1'].End();
	Repeater['bridgewallR2'].End();
	Repeater['bridgewallL3'].End();
	Repeater['pole1'].End();
	Repeater['pole2'].End();
135;
	Repeater['pole1'].Begin('1',0,0,0, ,0, ,3,,20, 'bridgepole');
	Repeater['pole2'].Begin('2',0,0,0, ,180, ,3,,20, 'bridgepole');
150;
	Track['3'].Position(-4,-0.01,-1500,0);
	Track['4'].Position(8,-0.01,1500,0);
	Repeater['pole1'].End();
	Repeater['pole2'].End();
170;
	Structure['fukusenpole8'].Put('1',2,0,0,,,,,);
	Structure['kasenhang'].Put('1',1.9,0,0,,,,,);
	Structure['kasenhangL'].Put('3',-1.9,0,0,,,,,);
	Structure['kasenhangR'].Put('4',1.9,0,0,,,,,);
200;
	JointNoise.Play(0);
	Track['mountainR'].Position(60,40,0,0);
	Track['mountain'].Position(-60,40,0,0);
250;	
	Repeater['pole3'].End();
	Repeater['pole4'].End();
	Repeater['bridgewallL2'].End();
	Repeater['bridgewallR3'].End();
	Track['3'].Position(0,-0.01,0,0);
	Track['4'].Position(4,-0.01,0,0);
	Repeater['pier1'].End();
	Repeater['pier2'].End();
	Repeater['concbridge3'].End();
	Repeater['concbridge4'].End();
	Repeater['bridgewallL1'].Begin('1',-0.2,-0.5,0, , , ,3,,5, 'bridgewallL');
	Repeater['bridgewallR1'].Begin('2',0.2,-0.5,0, , , ,3,,5, 'bridgewallR');
	Repeater['pole1'].Begin0('1',3,39.99,40,'bridgepole');
	Repeater['pole2'].Begin('2',0,0,0, ,180, ,3,,40, 'bridgepole');
255;
	JointNoise.Play(0);
	Track['3'].Position(0,-0.01,600,0);
	Track['4'].Position(4,-0.01,-600,0);
305;
	Track['3'].Position(2,-0.01,-600,0);
	Track['4'].Position(2,-0.01,600,0);
	Structure['fukusenpole5'].Put('1',2,0,0,,,,,);
	Structure['kasenhangL'].Put('1',-1.9,0,0,,,,,);
	Structure['kasenhangR'].Put('2',1.9,0,0,,,,,);
316;
	include 'hakureistairs.txt';
320;
	JointNoise.Play(0);
	Track['mountainR'].Position(40,-70,0,0);
	Track['mountain'].Position(-10,-20,0,0);
355;
	Track['3'].Position(4,-0.01,0,0);
	Track['4'].Position(0,-0.01,0,0);
	Repeater['slabRail3'].End();
	Repeater['slabRail4'].End();
	Repeater['kasen3'].End();
	Repeater['kasen4'].End();
400;
	Track['mountainR'].Position(40,10,0,0);
	Track['mountain'].Position(-60,40,0,0);
800;
	Track['ground'].Position(0,-14,0,0);
	Gradient.BeginTransition();
	Track['mountainR'].Position(0,-10,0,0);
	Fog.Interpolate(0.004,0.8,0.8,0.8);
	Structure['GPDL'].Put('1',-2.3,-0.6,0,,0,,,);
890;
	Repeater['tree1'].Begin('ground',-7,-0.1,0, , , ,3,,50, 'tree1');
	Repeater['tree2'].Begin('ground',-7,-0.1,10, , , ,3,,50, 'tree2');
	Repeater['tree3'].Begin('ground',-7,-0.1,20, , , ,3,,50, 'tree3');
	Repeater['tree4'].Begin('ground',-7,-0.1,30, , , ,3,,50, 'tree4');
	#tree extend1
	Repeater['tree9'].Begin('ground',-21,-0.1,0, , , ,3,,50, 'tree1');
	Repeater['tree10'].Begin('ground',-21,-0.1,10, , , ,3,,50, 'tree2');
	Repeater['tree11'].Begin('ground',-21,-0.1,20, , , ,3,,50, 'tree3');
	Repeater['tree12'].Begin('ground',-21,-0.1,30, , , ,3,,50, 'tree4');
	#tree extend2
	Repeater['tree17'].Begin('ground',-35,-0.1,0, , , ,3,,50, 'tree1');
	Repeater['tree18'].Begin('ground',-35,-0.1,10, , , ,3,,50, 'tree2');
	Repeater['tree19'].Begin('ground',-35,-0.1,20, , , ,3,,50, 'tree3');
	Repeater['tree20'].Begin('ground',-35,-0.1,30, , , ,3,,50, 'tree4');
895;
	Repeater['tree5'].Begin('ground',-14,-0.1,0, , , ,3,,50, 'tree1');
	Repeater['tree6'].Begin('ground',-14,-0.1,10, , , ,3,,50, 'tree2');
	Repeater['tree7'].Begin('ground',-14,-0.1,20, , , ,3,,50, 'tree3');
	Repeater['tree8'].Begin('ground',-14,-0.1,30, , , ,3,,50, 'tree4');
#tree extend1
	Repeater['tree13'].Begin('ground',-28,-0.1,0, , , ,3,,50, 'tree1');
	Repeater['tree14'].Begin('ground',-28,-0.1,10, , , ,3,,50, 'tree2');
	Repeater['tree15'].Begin('ground',-28,-0.1,20, , , ,3,,50, 'tree3');
	Repeater['tree16'].Begin('ground',-28,-0.1,30, , , ,3,,50, 'tree4');
	#tree extend2
	Repeater['tree21'].Begin('ground',-42,-0.1,0, , , ,3,,50, 'tree1');
	Repeater['tree22'].Begin('ground',-42,-0.1,10, , , ,3,,50, 'tree2');
	Repeater['tree23'].Begin('ground',-42,-0.1,20, , , ,3,,50, 'tree3');
	Repeater['tree24'].Begin('ground',-42,-0.1,30, , , ,3,,50, 'tree4');
900;
	Track['mountain'].Position(-60,50,0,0);
	Track['mountainR'].Position(0,-70,0,0);
950;
	Track['mountain'].Position(-150,60,0,0);
	Track['mountainR'].Position(40,10,0,0);

1100;
	Track['mountainR'].Position(30,0,0,0);
	Gradient.Begin(-18.7);
	Track['ground'].Position(0,-13,0,0);
1170;
	Track['mountain'].Position(-130,50,0,0);
1250;
	Track['mountain'].Position(-280,40,0,0);

#高架区間end
1555;
	Repeater['slabRail'].End();
	Repeater['slabRail2'].End();
	Repeater['Rail'].Begin0('1',1,4.99,5,'rail');
	Repeater['Rail2'].Begin0('2',1,4.99,5,'rail');
	Repeater['concbridge1'].End();
	Repeater['concbridge2'].End();
	Repeater['bridgewallL1'].End();
	Repeater['bridgewallR1'].End();
	Curve.BeginTransition();
	Track['ground'].Position(0,-3.64,0,0);
	Repeater['pole1'].End();
	Repeater['pole2'].End();
	Repeater['pole1'].Begin0('1',3,39.99,40,'pole');
	Repeater['pole2'].Begin('2',0,0,0, ,180, ,3,,40, 'pole');
	Repeater['dikegrsL'].Begin('1',0,0,0, ,, ,3,,5, 'dikegrassL');
	Repeater['dikegrsR'].Begin('2',0,0,0, ,, ,3,,5, 'dikegrassR');
	Repeater['tree9'].End();
	Repeater['tree10'].End();
	Repeater['tree11'].End();
	Repeater['tree12'].End();
	Repeater['tree13'].End();
	Repeater['tree14'].End();
	Repeater['tree15'].End();
	Repeater['tree16'].End();
	Repeater['tree17'].End();
	Repeater['tree18'].End();
	Repeater['tree19'].End();
	Repeater['tree20'].End();
	Repeater['tree21'].End();
	Repeater['tree22'].End();
	Repeater['tree23'].End();
	Repeater['tree24'].End();
1566;
	SpeedLimit.Begin(100);
	Structure['100'].Put('1',-2.4,0.5,0,,,,,);
	Structure['limitpole'].Put('1',-2.4,0.4,0,,,,,);	
	rollingNoise.Change(2);
	Curve.Begin(830,0.09);
	Track['mountain'].Position(-80,40,0,0);
1750;
	Gradient.BeginTransition();
	Track['mountain'].Position(-100,0,0,0);
	Repeater['mountain'].End();
1811;
	Curve.BeginTransition();
1831;
	Curve.End();
	Repeater['mountainR'].End();
	Track['mountainR'].Position(-10,-10,0,0);
1835;
	Repeater['treeR1'].Begin('ground',11,-0.1,0, , , ,3,,50, 'tree1');
	Repeater['treeR2'].Begin('ground',11,-0.1,10, , , ,3,,50, 'tree2');
	Repeater['treeR3'].Begin('ground',11,-0.1,20, , , ,3,,50, 'tree3');
	Repeater['treeR4'].Begin('ground',11,-0.1,30, , , ,3,,50, 'tree4');
1850;
	Fog.Interpolate(0.007,0.8,0.8,0.8);
	Gradient.End();
	Track['ground'].Position(0,0,0,0);
	Repeater['dikegrsL'].End();
	Repeater['dikegrsR'].End();
	Structure['GPLU'].Put('1',-2.3,-0.4,0,,0,,,);
1860;
	Repeater['treeR5'].Begin('ground',18,-0.1,0, , , ,3,,50, 'tree1');
	Repeater['treeR6'].Begin('ground',18,-0.1,10, , , ,3,,50, 'tree2');
	Repeater['treeR7'].Begin('ground',18,-0.1,20, , , ,3,,50, 'tree3');
	Repeater['treeR8'].Begin('ground',18,-0.1,30, , , ,3,,50, 'tree4');
1944;
	Curve.BeginTransition();
1964;
	Curve.Begin(-830,-0.09);
2277;
	Curve.BeginTransition();
2297;
	Curve.End();
	SpeedLimit.End();
	Beacon.Put(19,0,0);
	Structure['end'].Put('1',-2.4,0.5,0,,,,,);
	Structure['limitpole'].Put('1',-2.4,0.4,0,,,,,);	
2682;
	Curve.BeginTransition();
2702;
	Curve.Begin(1850,0.04);
	Repeater['grassland1'].End();
2730;
	Repeater['treeR2'].End();
	Repeater['treeR3'].End();
	Repeater['treeR4'].End();
	Repeater['treeR6'].End();
	Repeater['treeR7'].End();
	Repeater['treeR8'].End();
	Repeater['tree2'].End();
	Repeater['tree3'].End();
	Repeater['tree4'].End();
	Repeater['tree6'].End();
	Repeater['tree7'].End();
	Repeater['tree8'].End();
2750;
	Repeater['river'].Begin('ground',0,-7,0, , , , 3,,5, 'river');
	Repeater['treeR1'].End();
	Repeater['treeR5'].End();
	Repeater['tree1'].End();
	Repeater['tree5'].End();
	Repeater['tree6'].End();
	Repeater['tree7'].End();
	Repeater['tree8'].End();
#南博麗橋
2752;
	Repeater['Rail'].End();
	Repeater['Rail2'].End();
	Repeater['bridgerail'].Begin('1', 0, 0, 0, , , , 3,,5, 'bridgerail');
	Repeater['bridgerail2'].Begin('2', 0, 0, 0, , , , 3,,5, 'bridgerail');
	Repeater['bridgehandleL1'].Begin('1', 0, 0, 0, , , , 3,,5, 'bridgehandleL');
	Repeater['bridgehandleR1'].Begin('1', 0, 0, 0, , , , 3,,5, 'bridgehandleR');
	Repeater['bridgehandleL2'].Begin('2', 0, 0, 0, , , , 3,,5, 'bridgehandleL');
	Repeater['bridgehandleR2'].Begin('2', 0, 0, 0, , , , 3,,5, 'bridgehandleR');
	rollingNoise.Change(3);
2844;
	rollingNoise.Change(2);
	Repeater['bridgerail'].End();
	Repeater['bridgerail2'].End();
	Repeater['bridgehandleL1'].End();
	Repeater['bridgehandleL2'].End();
	Repeater['bridgehandleR1'].End();
	Repeater['bridgehandleR2'].End();
	Repeater['river'].End();
	Repeater['Rail'].Begin0('1',1,4.99,5,'rail');
	Repeater['Rail2'].Begin0('2',1,4.99,5,'rail');
	Repeater['grassland1'].Begin('ground',0,0,0, , , ,1,,49, 'grassland');
2845;
	Repeater['tree1'].Begin('ground',-7,-0.1,0, , , ,3,,50, 'tree1');
	Repeater['tree2'].Begin('ground',-8,-0.1,10, , , ,3,,50, 'tree2');
	Repeater['tree3'].Begin('ground',-7,-0.1,20, , , ,3,,50, 'tree3');
	Repeater['tree4'].Begin('ground',-8,-0.1,30, , , ,3,,50, 'tree4');
	Repeater['treeR1'].Begin('ground',11,-0.1,0, , , ,3,,50, 'tree1');
	Repeater['treeR2'].Begin('ground',12,-0.1,10, , , ,3,,50, 'tree2');
	Repeater['treeR3'].Begin('ground',11,-0.1,20, , , ,3,,50, 'tree3');
	Repeater['treeR4'].Begin('ground',12,-0.1,30, , , ,3,,50, 'tree4');
	#tree extend1
	Repeater['tree9'].Begin('ground',-20,-0.1,0, , , ,3,,50, 'tree1');
	Repeater['tree10'].Begin('ground',-21,-0.1,10, , , ,3,,50, 'tree2');
	Repeater['tree11'].Begin('ground',-20,-0.1,20, , , ,3,,50, 'tree3');
	Repeater['tree12'].Begin('ground',-21,-0.1,30, , , ,3,,50, 'tree4');
	Repeater['treeR9'].Begin('ground',21,-0.1,0, , , ,3,,50, 'tree1');
	Repeater['treeR10'].Begin('ground',20,-0.1,10, , , ,3,,50, 'tree2');
	Repeater['treeR11'].Begin('ground',21,-0.1,20, , , ,3,,50, 'tree3');
	Repeater['treeR12'].Begin('ground',20,-0.1,30, , , ,3,,50, 'tree4');
	#tree extend2
	Repeater['tree17'].Begin('ground',-35,-0.1,0, , , ,3,,50, 'tree1');
	Repeater['tree18'].Begin('ground',-35,-0.1,10, , , ,3,,50, 'tree2');
	Repeater['tree19'].Begin('ground',-35,-0.1,20, , , ,3,,50, 'tree3');
	Repeater['tree20'].Begin('ground',-35,-0.1,30, , , ,3,,50, 'tree4');
	Repeater['treeR17'].Begin('ground',35,-0.1,0, , , ,3,,50, 'tree1');
	Repeater['treeR18'].Begin('ground',35,-0.1,10, , , ,3,,50, 'tree2');
	Repeater['treeR19'].Begin('ground',35,-0.1,20, , , ,3,,50, 'tree3');
	Repeater['treeR20'].Begin('ground',35,-0.1,30, , , ,3,,50, 'tree4');
2850;
	Repeater['tree5'].Begin('ground',-14,-0.1,0, , , ,3,,50, 'tree1');
	Repeater['tree6'].Begin('ground',-15,-0.1,10, , , ,3,,50, 'tree2');
	Repeater['tree7'].Begin('ground',-14,-0.1,20, , , ,3,,50, 'tree3');
	Repeater['tree8'].Begin('ground',-15,-0.1,30, , , ,3,,50, 'tree4');
	Repeater['treeR5'].Begin('ground',18,-0.1,0, , , ,3,,50, 'tree1');
	Repeater['treeR6'].Begin('ground',19,-0.1,10, , , ,3,,50, 'tree2');
	Repeater['treeR7'].Begin('ground',18,-0.1,20, , , ,3,,50, 'tree3');
	Repeater['treeR8'].Begin('ground',19,-0.1,30, , , ,3,,50, 'tree4');
	#tree extend1
	Repeater['tree13'].Begin('ground',-28,-0.1,0, , , ,3,,50, 'tree1');
	Repeater['tree14'].Begin('ground',-28,-0.1,10, , , ,3,,50, 'tree2');
	Repeater['tree15'].Begin('ground',-28,-0.1,20, , , ,3,,50, 'tree3');
	Repeater['tree16'].Begin('ground',-28,-0.1,30, , , ,3,,50, 'tree4');
	Repeater['treeR13'].Begin('ground',28,-0.1,0, , , ,3,,50, 'tree1');
	Repeater['treeR14'].Begin('ground',28,-0.1,10, , , ,3,,50, 'tree2');
	Repeater['treeR15'].Begin('ground',28,-0.1,20, , , ,3,,50, 'tree3');
	Repeater['treeR16'].Begin('ground',28,-0.1,30, , , ,3,,50, 'tree4');
	#tree extend2
	Repeater['tree21'].Begin('ground',-42,-0.1,0, , , ,3,,50, 'tree1');
	Repeater['tree22'].Begin('ground',-42,-0.1,10, , , ,3,,50, 'tree2');
	Repeater['tree23'].Begin('ground',-42,-0.1,20, , , ,3,,50, 'tree3');
	Repeater['tree24'].Begin('ground',-42,-0.1,30, , , ,3,,50, 'tree4');
	Repeater['treeR21'].Begin('ground',42,-0.1,0, , , ,3,,50, 'tree1');
	Repeater['treeR22'].Begin('ground',42,-0.1,10, , , ,3,,50, 'tree2');
	Repeater['treeR23'].Begin('ground',42,-0.1,20, , , ,3,,50, 'tree3');
	Repeater['treeR24'].Begin('ground',42,-0.1,30, , , ,3,,50, 'tree4');
3500;
	Repeater['tree9'].End();
	Repeater['tree10'].End();
	Repeater['tree11'].End();
	Repeater['tree12'].End();
	Repeater['tree13'].End();
	Repeater['tree14'].End();
	Repeater['tree15'].End();
	Repeater['tree16'].End();
	Repeater['tree17'].End();
	Repeater['tree18'].End();
	Repeater['tree19'].End();
	Repeater['tree20'].End();
	Repeater['tree21'].End();
	Repeater['tree22'].End();
	Repeater['tree23'].End();
	Repeater['tree24'].End();
	Repeater['treeR9'].End();
	Repeater['treeR10'].End();
	Repeater['treeR11'].End();
	Repeater['treeR12'].End();
	Repeater['treeR13'].End();
	Repeater['treeR14'].End();
	Repeater['treeR15'].End();
	Repeater['treeR16'].End();
	Repeater['treeR17'].End();
	Repeater['treeR18'].End();
	Repeater['treeR19'].End();
	Repeater['treeR20'].End();
	Repeater['treeR21'].End();
	Repeater['treeR22'].End();
	Repeater['treeR23'].End();
	Repeater['treeR24'].End();
3739;
	Curve.BeginTransition();
3759;
	Curve.Begin(529,0.11);
	SpeedLimit.Begin(75);
	Structure['70'].Put('1',-2.4,0.5,0,,,,,);
	Structure['5'].Put('1',-2.4,0.5,0,,,,,);
	Structure['limitpole'].Put('1',-2.4,0.4,0,,,,,);
4123;
	Curve.BeginTransition();
4143;
	SpeedLimit.End();
	Beacon.Put(19,0,0);
	Structure['end'].Put('1',-2.4,0.5,0,,,,,);
	Structure['limitpole'].Put('1',-2.4,0.4,0,,,,,);
	Curve.End();
4397;
	Curve.BeginTransition();
4417;
	SpeedLimit.Begin(100);
	Structure['100'].Put('1',-2.4,0.5,0,,,,,);
	Structure['limitpole'].Put('1',-2.4,0.4,0,,,,,);
	Curve.Begin(-820,-0.04);
4717;
	Curve.BeginTransition();
4737;
	SpeedLimit.End();
	Structure['end'].Put('1',-2.4,0.5,0,,,,,);
	Structure['limitpole'].Put('1',-2.4,0.4,0,,,,,);
	Curve.End();
	Beacon.Put(19,0,0);
4925;
	Repeater['treeR2'].End();
	Repeater['treeR3'].End();
	Repeater['treeR4'].End();
	Repeater['tree2'].End();
	Repeater['tree3'].End();
	Repeater['tree4'].End();
4955;
	Repeater['river'].Begin('ground',0,-7,0, , , , 3,,5, 'river');
	Repeater['treeR1'].End();
	Repeater['tree1'].End();
4960;
	Structure['formendfence'].Put('1',-4,1.2,0.3,,,,,);
	Structure['formendfence'].Put('2',4,1.2,0.3,,,,,);
	Repeater['pole1'].End();
	Repeater['pole2'].End();
	Repeater['modernformL1'].Begin('1',0, 0, 0, , , ,3,,5, 'modernformL');
	Repeater['modernformR1'].Begin('2',0, 0, 0, , , ,3,,5, 'modernformR');
	Repeater['modernformgroundL1'].Begin('1',0.6,0,0.001, , , ,3,,5, 'modernformgroundL');
	Repeater['modernformgroundR1'].Begin('2',-0.6,0,0.001, , , ,3,,5, 'modernformgroundR');
	Repeater['fenceL1'].Begin('1',0.6, 0, 0, , , ,3,,5, 'fenceL');
	Repeater['fenceR1'].Begin('2',-0.6, 0, 0, , , ,3,,5, 'fenceR');
5000;	
	Repeater['fukusenpole8'].Begin('1',2,0, 0, , , ,3,,40, 'fukusenpole8');
	Repeater['kasenhangL'].Begin('1',-1.9,0, 0, , , ,3,,40, 'kasenhangL');
	Repeater['kasenhangR'].Begin('2',1.9,0, 0, , , ,3,,40, 'kasenhangR');
5110-300;
	Structure['300t'].Put('1',-2.3,-0.3,0,,,,,);
	Structure['limitpole'].Put('1',-2.3,0.1,0,,,,,);
5110-200;
	Structure['200t'].Put('1',-2.3,-0.3,0,,,,,);
	Structure['limitpole'].Put('1',-2.3,0.1,0,,,,,);
5110-100;
	Structure['100t'].Put('1',-6,0.8,0,,,,,);
	Structure['limitpole'].Put('1',-6,1.2,0,,,,,);
5110;
	Station['2'].Put(-1,-5,5);
	Structure['stop'].Put('1',2,-0.3,0,,,,,);
5130;
	Repeater['modernformL1'].End();
	Repeater['modernformR1'].End();
	Repeater['modernformgroundL1'].End();
	Repeater['modernformgroundR1'].End();
	Repeater['fukusenpole8'].End();
	Repeater['kasenhangL'].End();
	Repeater['kasenhangR'].End();
	Structure['formendfence'].Put('1',-4,1.2,-0.3,,,,,);
	Structure['formendfence'].Put('2',4,1.2,-0.3,,,,,);
	Repeater['fenceL1'].End();
	Repeater['fenceR1'].End();
5135;
	Repeater['tree1'].Begin('ground',-7,-0.1,0, , , ,3,,50, 'tree1');
	Repeater['tree2'].Begin('ground',-8,-0.1,10, , , ,3,,50, 'tree2');
	Repeater['tree3'].Begin('ground',-7,-0.1,20, , , ,3,,50, 'tree3');
	Repeater['tree4'].Begin('ground',-8,-0.1,30, , , ,3,,50, 'tree4');
	Repeater['tree5'].Begin('ground',-14,-0.1,0, , , ,3,,50, 'tree1');
	Repeater['tree6'].Begin('ground',-15,-0.1,10, , , ,3,,50, 'tree2');
	Repeater['tree7'].Begin('ground',-14,-0.1,20, , , ,3,,50, 'tree3');
	Repeater['tree8'].Begin('ground',-15,-0.1,30, , , ,3,,50, 'tree4');
	Repeater['treeR1'].Begin('ground',11,-0.1,0, , , ,3,,50, 'tree1');
	Repeater['treeR2'].Begin('ground',12,-0.1,10, , , ,3,,50, 'tree2');
	Repeater['treeR3'].Begin('ground',11,-0.1,20, , , ,3,,50, 'tree3');
	Repeater['treeR4'].Begin('ground',12,-0.1,30, , , ,3,,50, 'tree4');
	Repeater['treeR5'].Begin('ground',18,-0.1,0, , , ,3,,50, 'tree1');
	Repeater['treeR6'].Begin('ground',19,-0.1,10, , , ,3,,50, 'tree2');
	Repeater['treeR7'].Begin('ground',18,-0.1,20, , , ,3,,50, 'tree3');
	Repeater['treeR8'].Begin('ground',19,-0.1,30, , , ,3,,50, 'tree4');
5140;
	Repeater['pole1'].Begin0('1',3,39.99,40,'pole');
	Repeater['pole2'].Begin('2',0,0,0, ,180, ,3,,40, 'pole');
5209;
	Curve.BeginTransition();
	Fog.Interpolate(0.007,0.8,0.8,0.8);
5229;
	Curve.Begin(-966,-0.04);
5982;
	Curve.BeginTransition();
6002;
	Curve.End();
6400;
	Repeater['treeR1'].End();
	Repeater['treeR2'].End();
	Repeater['treeR3'].End();
	Repeater['treeR4'].End();
	Repeater['treeR5'].End();
	Repeater['treeR6'].End();
	Repeater['treeR7'].End();
	Repeater['treeR8'].End();
6500;
	Repeater['tree1'].End();
	Repeater['tree2'].End();
	Repeater['tree3'].End();
	Repeater['tree4'].End();
	Repeater['tree5'].End();
	Repeater['tree6'].End();
	Repeater['tree7'].End();
	Repeater['tree8'].End();
	Fog.Interpolate(0.002,0.8,0.8,0.8);
6519;
	Curve.BeginTransition();
6539;
	Curve.Begin(-1656,-0.02);
6992;
	Curve.BeginTransition();
7012;
	Curve.End();
7875;
	Curve.BeginTransition();
7895;
	SpeedLimit.Begin(90);
	Structure['90'].Put('1',-2.4,0.5,0,,,,,);
	Structure['0'].Put('1',-2.4,0.5,0,,,,,);
	Structure['limitpole'].Put('1',-2.4,0.4,0,,,,,);
	Curve.Begin(-706,-0.09);
8157;
	Curve.BeginTransition();
8177;
	Curve.End();
	SpeedLimit.End();
	Structure['end'].Put('1',-2.4,0.5,0,,,,,);
	Structure['limitpole'].Put('1',-2.4,0.4,0,,,,,);
8439;
	Curve.BeginTransition();
8459;
	Fog.Interpolate(0.002,0.8,0.8,0.8);
	Curve.Begin(-2000,-0.02);
8770;
	Curve.BeginTransition();
8790;
	Curve.End();
	Fog.Interpolate(0.009,0.7,0.7,0.7);
9000;
	Fog.Interpolate(0.029,0.7,0.7,0.7);
10124;
	Curve.BeginTransition();
10144;
	SpeedLimit.Begin(95);
	Structure['90'].Put('1',-2.4,0.5,0,,,,,);
	Structure['5'].Put('1',-2.4,0.5,0,,,,,);
	Structure['limitpole'].Put('1',-2.4,0.4,0,,,,,);
	Curve.Begin(800,0.05);
	Track['2'].Position(4,0,0,0);
10633;
	Track['2'].Position(7,0,0,0);
10733;
	Repeater['formL1'].Begin('2',0, 0, 0, , , ,3,,5, 'formL');
	Repeater['formR1'].Begin('1',0, 0, 0, , , ,3,,5, 'formR');
	Repeater['formgroundL1'].Begin('2',0, 0, 0, , , ,3,,5, 'formgroundL');
10833-300;
	Structure['300t'].Put('1',-2.3,-0.5,0,,,,,);
	Structure['limitpole'].Put('1',-2.3,-0.1,0,,,,,);
10833-200;
	Structure['200t'].Put('1',-2.3,-0.5,0,,,,,);
	Structure['limitpole'].Put('1',-2.3,-0.1,0,,,,,);
10833-100;
	Structure['100t'].Put('1',-2.3,-0.5,0,,,,,);
	Structure['limitpole'].Put('1',-2.3,-0.1,0,,,,,);
10833;
	Station['3'].Put(1,-5,5);
	Structure['stop'].Put('1',-2,-0.3,0,,,,,);
	Track['2'].Position(7,0,0,0);
10843;
	Repeater['formL1'].End();
	Repeater['formR1'].End();
	Repeater['formgroundL1'].End();
	Structure['formendfence'].Put('1',3.4,1.2,-0.3,,,,,);
11066;
	Curve.BeginTransition();
11086;
	Track['2'].Position(4,0,0,0);
	SpeedLimit.End();
	Structure['end'].Put('1',-2.4,0.5,0,,,,,);
	Structure['limitpole'].Put('1',-2.4,0.4,0,,,,,);
	Curve.Begin(1093,0.04);
11400;
	Repeater['grassland1'].End();
	Repeater['river'].Begin('ground',0,-10,0, , , , 3,,5, 'river');
#竹林橋
11418;
	Repeater['Rail'].End();
	Repeater['Rail2'].End();
	Repeater['bridgerail'].Begin('1', 0, 0, 0, , , , 3,,5, 'bridgerail');
	Repeater['bridgerail2'].Begin('2', 0, 0, 0, , , , 3,,5, 'bridgerail');
	Repeater['bridgehandleL1'].Begin('1', 0, 0, 0, , , , 3,,5, 'bridgehandleL');
	Repeater['bridgehandleR1'].Begin('1', 0, 0, 0, , , , 3,,5, 'bridgehandleR');
	Repeater['bridgehandleL2'].Begin('2', 0, 0, 0, , , , 3,,5, 'bridgehandleL');
	Repeater['bridgehandleR2'].Begin('2', 0, 0, 0, , , , 3,,5, 'bridgehandleR');
	rollingNoise.Change(3);
11568;
	Repeater['bridgerail'].End();
	Repeater['bridgerail2'].End();
	Repeater['Rail'].Begin0('1',1,4.99,5,'rail');
	Repeater['Rail2'].Begin0('2',1,4.99,5,'rail');
	Repeater['bridgehandleL1'].End();
	Repeater['bridgehandleL2'].End();
	Repeater['bridgehandleR1'].End();
	Repeater['bridgehandleR2'].End();
	rollingNoise.Change(2);
	Repeater['river'].End();
	Repeater['grassland1'].Begin('ground',0,0,0, , , ,0,,49, 'grassland');
11828;
	Curve.BeginTransition();
11848;
	Curve.End();
11986;
	Curve.BeginTransition();
12006;	
	Curve.Begin(955,0.06);
12270;
	Curve.BeginTransition();
12290;
	Curve.End();
13810;
	Repeater['pole1'].End();
	Repeater['pole2'].End();
	Repeater['formL1'].Begin('1',0, 0, 0, , , ,3,,5, 'formL');
	Repeater['formR1'].Begin('2',0, 0, 0, , , ,3,,5, 'formR');
	Repeater['formgroundL1'].Begin('1',0, 0, 0, , , ,3,,5, 'formgroundL');
	Repeater['formgroundR1'].Begin('2',0, 0, 0, , , ,3,,5, 'formgroundR');
	Repeater['metalfenceL1'].Begin('1',-4.2,1.5,0, , , ,3,,5, 'metalfenceL');
	Repeater['metalfenceL2'].Begin('2',4.2,1.5,0, , , ,3,,5, 'metalfenceL');
13820;
	Structure['crost'].Put('2',4,2,0,,135,,,);
	Repeater['fukusenpole8'].Begin('1',2,0, 0, , , ,3,,40, 'fukusenpole8');
	Repeater['kasenhangL'].Begin('1',-1.9,0, 0, , , ,3,,40, 'kasenhangL');
	Repeater['kasenhangR'].Begin('2',1.9,0, 0, , , ,3,,40, 'kasenhangR');
13900;
	Structure['crost'].Put('1',-4,2,0,,-45,,,);
13910-300;
	Structure['300t'].Put('1',-2.3,-0.2,0,,,,,);
	Structure['limitpole'].Put('1',-2.3,0.2,0,,,,,);
13910-200;
	Structure['200t'].Put('1',-2.3,-0.2,0,,,,,);
	Structure['limitpole'].Put('1',-2.3,0.2,0,,,,,);
13910-100;
	Structure['100t'].Put('1',-4,0.8,0.3,,,,,);
	Structure['limitpole'].Put('1',-4,1.2,0.3,,,,,);
13910;
	Station['4'].Put(-1,-5,5);
	Structure['stop'].Put('1',2,-0.3,0,,,,,);
13920;
	Repeater['formL1'].End();
	Repeater['formR1'].End();
	Repeater['formgroundL1'].End();
	Repeater['formgroundR1'].End();
	Repeater['fukusenpole8'].End();
	Repeater['kasenhangL'].End();
	Repeater['kasenhangR'].End();
	Repeater['metalfenceL1'].End();
	Repeater['metalfenceL2'].End();
13930;
	Repeater['pole1'].Begin0('1',3,39.99,40,'pole');
	Repeater['pole2'].Begin('2',0,0,0, ,180, ,3,,40, 'pole');
13945;
	Fog.Interpolate(0.029,0.7,0.7,0.7);
	Curve.BeginTransition();
13965;
	SpeedLimit.Begin(75);
	Structure['70'].Put('1',-2.4,0.5,0,,,,,);
	Structure['5'].Put('1',-2.4,0.5,0,,,,,);
	Structure['limitpole'].Put('1',-2.4,0.4,0,,,,,);
	Curve.Begin(509,0.011);
14378;
	Curve.BeginTransition();
14398;
	SpeedLimit.End();
	Structure['end'].Put('1',-2.4,0.5,0,,,,,);
	Structure['limitpole'].Put('1',-2.4,0.4,0,,,,,);
	Curve.End();
14542;
	Curve.BeginTransition();
14562;
	Fog.Interpolate(0.05,0.7,0.7,0.7);
	Curve.Begin(1200,0.02);
	Track['2'].Position(4,0,700,0);
14753;
	Curve.BeginTransition();
14773;
	Track['2'].Position(40,0,0,0);
	Repeater['Rail2'].End();
	Repeater['kasen2'].End();
	Repeater['pole2'].End();
	Curve.End();
16467;
	Curve.BeginTransition();
16487;
	SpeedLimit.Begin(85);
	Structure['80'].Put('1',-2.4,0.5,0,,,,,);
	Structure['5'].Put('1',-2.4,0.5,0,,,,,);
	Structure['limitpole'].Put('1',-2.4,0.4,0,,,,,);
	Curve.Begin(600,0.1);
16653;
	Curve.BeginTransition();
16673;
	SpeedLimit.End();
	Structure['end'].Put('1',-2.4,0.5,0,,,,,);
	Structure['limitpole'].Put('1',-2.4,0.4,0,,,,,);
	Curve.End();
17000;
	Fog.Interpolate(0.011,0.7,0.7,0.7);
	Repeater['Rail2'].Begin0('2',1,4.89,4.9,'rail');
	Repeater['kasen2'].Begin0('2',3,39.99,40,'kasen');
	Track['2'].Position(75,0,0,0);
17010;
	Repeater['pole2'].Begin('2',0,0,0, ,180, ,3,,40, 'pole');
17129;
	Curve.BeginTransition();
	Repeater['pole1'].End();
17149;
	Track['2'].Position(20,0,190,0);
	SpeedLimit.Begin(45);
	Structure['40'].Put('1',-2.4,0.5,0,,,,,);
	Structure['5'].Put('1',-2.4,0.5,0,,,,,);
	Structure['limitpole'].Put('1',-2.4,0.4,0,,,,,);
	Curve.Begin(-190,-0.06);
17160;
	Repeater['pole1'].Begin('1',0.2,0,0, ,0, ,3,,40, 'pole');
17210;
	Curve.BeginTransition();
17230;
	SpeedLimit.End();
	Structure['end'].Put('1',-2.4,0.5,0,,,,,);
	Structure['limitpole'].Put('1',-2.4,0.4,0,,,,,);	
	Curve.End();
	Track['2'].Position(4,0,0,0);
	Repeater['Rail2'].End();
	Repeater['Rail2'].Begin0('2',1,4.99,5,'rail');
17235;
	Structure['grassland'].Put('ground',0,0,0,,,,,);
17250;
	Repeater['grassland1'].End();
	Repeater['river'].Begin('ground',0,-5,0, , , , 3,,5, 'river');
17260;
	Repeater['pole2'].End();
#人里橋
17285;
	Fog.Interpolate(0.002,0.9,0.9,0.9);
	Repeater['pole1'].End();
	Repeater['pole1'].Begin('1',0.2,0,0, ,0, ,3,,40, 'pole');
	Repeater['pole2'].Begin('2',-0.2,0,0, ,180, ,3,,40, 'pole');
	Repeater['Rail'].End();
	Repeater['Rail2'].End();
	Repeater['bridgerail'].Begin('1', 0, 0, 0, , , , 3,,5, 'bridgerail');
	Repeater['bridgerail2'].Begin('2', 0, 0, 0, , , , 3,,5, 'bridgerail');
	Repeater['bridgehandleL1'].Begin('1', 0, 0, 0, , , , 3,,5, 'bridgehandleL');
	Repeater['bridgehandleR1'].Begin('1', 0, 0, 0, , , , 3,,5, 'bridgehandleR');
	Repeater['bridgehandleL2'].Begin('2', 0, 0, 0, , , , 3,,5, 'bridgehandleL');
	Repeater['bridgehandleR2'].Begin('2', 0, 0, 0, , , , 3,,5, 'bridgehandleR');
	rollingNoise.Change(3);
17347;
	Repeater['grassland1'].Begin('ground',0,0,0, , , ,1,,49, 'grassland');
	Repeater['bridgerail'].End();
	Repeater['bridgerail2'].End();
	Repeater['bridgehandleL1'].End();
	Repeater['bridgehandleL2'].End();
	Repeater['bridgehandleR1'].End();
	Repeater['bridgehandleR2'].End();
	Repeater['Rail'].Begin0('1',1,4.99,5,'rail');
	Repeater['Rail2'].Begin0('2',1,4.99,5,'rail');
	rollingNoise.Change(2);
	Repeater['river'].End();
17400;
	Repeater['fieldL'].Begin('ground',-10,0,0, , , ,0,,35, 'fieldL');
17520;
	SpeedLimit.End();
	//Structure['end'].Put('1',-2.4,0.5,0,,,,,);
	//Structure['limitpole'].Put('1',-2.4,0.4,0,,,,,);
18300;
	Repeater['fieldL'].End();
18370;
	Track['wallR'].Position(9.8,0.5,0,0);
	Track['wallL'].Position(-5.8,0.5,0,0);
	Repeater['concbridge1'].Begin('1',0,-0, 0, , , ,3,,5, 'concbridge');
	Repeater['concbridge2'].Begin('2',0,-0, 0, , , ,3,,5, 'concbridge');
	Repeater['dikewall1'].Begin('ground',-0.4,-2.7,0,,,,3,,5, 'dikewall');
	Repeater['dikewall2'].Begin('ground',-0.4,-4.6,0,,,,3,,5, 'dikewall');
	Repeater['dikewall3'].Begin('ground',-0.4,-6.5,0,,,,3,,5, 'dikewall');
	Repeater['dikewall5'].Begin('ground',4.5,-2.7,0,,,,3,,5, 'dikewallRR');
	Repeater['dikewall6'].Begin('ground',4.5,-4.6,0,,,,3,,5, 'dikewallRR');
	Repeater['dikewall7'].Begin('ground',4.5,-6.5,0,,,,3,,5, 'dikewallRR');
	Repeater['grassland1'].End();
	Repeater['grassland1'].Begin('ground',107.5,0,0, , , ,0,,49, 'grassland');
	Repeater['grassland2'].Begin('ground',-103.7,0,0, , , ,0,,49, 'grassland');
	Gradient.BeginTransition();
	Track['ground'].Position(0,0,0,0);
18380;
	Repeater['pole1'].End();
	Repeater['pole2'].End();
18400;
	Repeater['pole1'].Begin('1',0.2,0,0, ,0, ,3,,40, 'acpole');
	Repeater['pole2'].Begin('2',-0.2,0,0, ,180, ,3,,40, 'acpole');
18560;
	Repeater['dikewallL'].End();
	Repeater['dikewallR'].End();
	Repeater['dikewallR'].Begin0('wallR',3,24.99,25,'dikewallL');
	Repeater['dikewallL'].Begin0('wallL',3,24.99,25,'dikewallR');
18670;
	Gradient.Begin(-11);
18973;
	Curve.BeginTransition();
18993;
	Curve.Begin(900,0.05);
19000;
	Repeater['dikewall4'].Begin('ground',-0.4,-8.4,0,,,,3,,5, 'dikewall');
	Repeater['dikewall8'].Begin('ground',4.5,-8.4,0,,,,3,,5, 'dikewallRR');
19149;
	Fog.Interpolate(0,0.9,0.9,0.9);
19155;
	Fog.Interpolate(0.002,0,0,0);
	#Legacy.Fog(60, 70, 0, 0, 0);
#地下区間
19170;
	Repeater['pole1'].End();
	Repeater['pole2'].End();
	Repeater['dikewallR'].End();
	Repeater['dikewallL'].End();
	Repeater['dikewall1'].End();
	Repeater['dikewall2'].End();
	Repeater['dikewall3'].End();
	Repeater['dikewall4'].End();
	Repeater['dikewall5'].End();
	Repeater['dikewall6'].End();
	Repeater['dikewall7'].End();
	Repeater['dikewall8'].End();
	Track['ground'].Position(0,8.8,0,0);
	Repeater['grassland1'].End();
	Repeater['grassland2'].End();
	Fog.Interpolate(0,0.1,0.1,0.1);
	Background.Change('');
	Structure['Tunnelpotal'].Put('1',1.9,-0.25,1.6,,,,,);
	Structure['Tunnelentry'].Put('1',1.9,-0.25,1.6,,,,,);
	SpeedLimit.Begin(90);
	Structure['90'].Put('1',-2.4,0.5,0,,,,,);
	Structure['0'].Put('1',-2.4,0.5,0,,,,,);
	Structure['limitpole'].Put('1',-2.4,0.4,0,,,,,);
	Repeater['Rail'].End();
	Repeater['Rail2'].End();
	rollingNoise.Change(4);
	CabIlluminance.Set(1);
	Repeater['concbridge1'].End();
	Repeater['concbridge2'].End();
19171;
	Fog.Interpolate(0.01,0,0,0);
	Repeater['slabRail'].Begin0('1',1,4.99,5,'slabrailtwodark');
	Repeater['slabRail2'].Begin0('2',1,4.99,5,'slabrailtwodark');
	Repeater['tunnelwall'].Begin('1',1.9,-0.25,1.6, , , ,1,,4.99, 'Tunnellp');
	#Fog.Interpolate(0.04,0,0,0);
	CabIlluminance.Set(0);
19200;
	Repeater['tunnelpole1'].Begin('1',1.9, 0, 0, , , ,3,,40, 'tunnelpole');
19570;
	Gradient.BeginTransition();
19670;
	Gradient.End();
19998;
	Curve.BeginTransition();
19218;
	Curve.End();
20075;
	Curve.BeginTransition();
20095;
	Fog.Interpolate(0.01,0,0,0);
	Curve.Begin(600,0.1);
20416;
	Curve.BeginTransition();
20436;
	Curve.End();
	Fog.Interpolate(0.001,0,0,0);
20795;
	CabIlluminance.Set(0);
20875;
	Repeater['tunnelwall'].End();
#Minami-Ningennosato
20880;
	Structure['Tunnelpotaldark'].Put('1',2,-0.25,-0.1,,,,,);
	Repeater['slabRail'].End();
	Repeater['slabRail2'].End();
	Repeater['slabRail'].Begin0('1',1,4.99,5,'slabrailtwo');
	Repeater['slabRail2'].Begin0('2',1,4.99,5,'slabrailtwo');
	#wall
	Repeater['tunwallL1'].Begin('1',-2.1,-1,0, , , ,3,,5, 'tunwall');
	Repeater['tunwallL2'].Begin('1',-2.1,0.8,0, , , ,3,,5, 'tunwall');
	Repeater['tunwallL3'].Begin('1',-2.1,2.6,0, , , ,3,,5, 'tunwall');	
	Repeater['tunwallR1'].Begin('2',2.1,-1,0, , , ,3,,5, 'tunwallR');
	Repeater['tunwallR2'].Begin('2',2.1,0.8,0, , , ,3,,5, 'tunwallR');
	Repeater['tunwallR3'].Begin('2',2.1,2.6,0, , , ,3,,5, 'tunwallR');
	Repeater['tunwallL31'].Begin('1',-2.6,3.1,0, , , -45,3,,5, 'tunwall');
	Repeater['tunwallR31'].Begin('2',2.6,3.1,0,, ,45 ,3,,5, 'tunwallR');
	#roof
	Repeater['tunwallL4'].Begin('1',-1.4,4.4,0, , , ,3,,5, 'tunwall');
	Repeater['tunwallR4'].Begin('2',1.4,4.4,0, , , ,3,,5, 'tunwallR');
	Repeater['tunwallL5'].Begin('1',-1.5,5.5,0, , , -45,3,,5, 'tunwall');
	Repeater['tunwallR5'].Begin('2',1.5,5.5,0,, ,45 ,3,,5, 'tunwallR');
	Repeater['tunwallL6'].Begin('1',-1.5,6.5,0, , , -90,3,,5, 'tunwall');
	Repeater['tunwallR6'].Begin('2',1.5,6.5,0,, ,90,3,,5, 'tunwallR');
	Repeater['tunwallL7'].Begin('1',0.3,6.5,0, , , -90,3,,5, 'tunwall');
	Repeater['tunwallR7'].Begin('2',-0.3,6.5,0,, ,90,3,,5, 'tunwallR');
	CabIlluminance.Set(0.7);
	#Centerwall
	Repeater['tunwallC1'].Begin('1',1.9,-1,0, , , ,3,,5, 'tunwallR');
	Repeater['tunwallC2'].Begin('1',1.9,0.8,0, , , ,3,,10, 'tunwallR');
	Repeater['tunwallC3'].Begin('1',1.9,2.6,0, , , ,3,,10, 'tunwallR');
	Repeater['tunwallC4'].Begin('1',1.9,4.4,0, , , ,3,,10, 'tunwallR');
	Repeater['tunwallC5'].Begin('1',1.9,6.2,0, , , ,3,,10, 'tunwallR');
20900;
	Repeater['tunwallL1'].End();
	Repeater['tunwallL2'].End();
	Repeater['tunwallL3'].End();
	Repeater['tunwallR1'].End();
	Repeater['tunwallR2'].End();
	Repeater['tunwallR3'].End();
	Repeater['tunwallL31'].End();
	Repeater['tunwallR31'].End();
	#Formwall
	Repeater['wallL1'].Begin('1',-7,1.2, 0, , , ,3,,5, 'formwallgrey');
	Repeater['wallL2'].Begin('1',-7,2.75, 0, , , ,3,,5, 'formwallwhite');
	Repeater['wallR1'].Begin('2',7,1.2, 0, , , ,3,,5, 'formwallgreyR');
	Repeater['wallR2'].Begin('2',7,2.75, 0, , , ,3,,5, 'formwallwhiteR');
	#Form
	Repeater['modernformL1'].Begin('1',0, 0, 0, , , ,3,,5, 'modernformL');
	Repeater['modernformR1'].Begin('2',0, 0, 0, , , ,3,,5, 'modernformR');
	Repeater['modernformgroundL1'].Begin('1',0,0,0, , , ,3,,5, 'modernformgroundL');
	Repeater['modernformgroundR1'].Begin('2',0,0,0, , , ,3,,5, 'modernformgroundR');
	#FormStart
	Structure['formendfence'].Put('1',-4,1.2,0.3,,,,,);
	Structure['formendfence'].Put('2',4,1.2,0.3,,,,,);
	#Formroof
	Repeater['Formroof1'].Begin('1',-0.98,6.77,0,,,90,3,,5, 'dikewall');
	Repeater['FormroofR1'].Begin('2',3.62,6.77,0,,,90,3,,5, 'dikewall');
	Repeater['Formroof2'].Begin('1',-2.88,6.77,0,,,90,3,,5, 'dikewall');
	Repeater['FormroofR2'].Begin('2',5.52,6.77,0,,,90,3,,5, 'dikewall');
	Repeater['Formroof3'].Begin('1',-4.78,6.77,0,,,90,3,,5, 'dikewall');
	Repeater['FormroofR3'].Begin('2',7.42,6.77,0,,,90,3,,5, 'dikewall');
	#lights
	Repeater['LightL'].Begin('1',-2.5,4.27,0,,,0,3,,3, 'light');
	Repeater['LightR'].Begin('2',2.5,4.27,0,,,0,3,,3, 'light');
21050-300;
	Structure['300t'].Put('1',-2,0.25,0,,,,,);
21050-200;
	Structure['200t'].Put('1',-2,0.25,0,,,,,);
21050-100;
	Structure['100t'].Put('1',-2,2.3,0,,,,,);
21050;
	Station['5'].Put(-1,-5,5);
	Structure['stop'].Put('1',-2,4.5,0,,,180,,);
21070;
	#Advertisemet(experimental)
	Structure['adboard'].Put('0',-5.5,3.6,-0.6,,90,-90,,);
	Structure['adboardback'].Put('0',-5.501,3.6,-0.5,,90,-90,,);
	Structure['kirisame'].Put('0',-5.502,3.6,-0.55,,90,-90,,);
	Repeater['wallL1'].End();
	Repeater['wallL2'].End();
	Repeater['wallR1'].End();
	Repeater['wallR2'].End();
	Repeater['tunwallL1'].Begin('1',-2.1,-1,0, , , ,3,,5, 'tunwall');
	Repeater['tunwallL2'].Begin('1',-2.1,0.8,0, , , ,3,,5, 'tunwall');
	Repeater['tunwallL3'].Begin('1',-2.1,2.6,0, , , ,3,,5, 'tunwall');
	Repeater['tunwallR1'].Begin('2',2.1,-1,0, , , ,3,,5, 'tunwallR');
	Repeater['tunwallR2'].Begin('2',2.1,0.8,0, , , ,3,,5, 'tunwallR');
	Repeater['tunwallR3'].Begin('2',2.1,2.6,0, , , ,3,,5, 'tunwallR');
	Repeater['tunwallL31'].Begin('1',-2.6,3.1,0, , , -45,3,,5, 'tunwall');
	Repeater['tunwallR31'].Begin('2',2.6,3.1,0,, ,45 ,3,,5, 'tunwallR');
	Structure['formendfence'].Put('1',-3.5,1.2,-0.3,,,,,);
	Structure['formendfence'].Put('2',3.5,1.2,-0.3,,,,,);
	Structure['formwallgrey'].Put('1',-7.1,1.2,-0.4,,90,,,);
	Structure['formwallwhite'].Put('1',-7.1,2.75,-0.4,,90,,,);
	Structure['formwallgreyR'].Put('2',7.1,1.2,-0.4,,-90,,,);
	Structure['formwallwhiteR'].Put('2',7.1,2.75,-0.4,,-90,,,);
	Repeater['modernformL1'].End();
	Repeater['modernformR1'].End();
	Repeater['modernformgroundL1'].End();
	Repeater['modernformgroundR1'].End();
	Repeater['Formroof1'].End();
	Repeater['FormroofR1'].End();
	Repeater['Formroof2'].End();
	Repeater['FormroofR2'].End();
	Repeater['Formroof3'].End();
	Repeater['FormroofR3'].End();
	Repeater['LightL'].End();
	Repeater['LightR'].End();
	Repeater['tunwallC1'].End();
	Repeater['tunwallC2'].End();
	Repeater['tunwallC3'].End();
	Repeater['tunwallC4'].End();
	Repeater['tunwallC5'].End();
21080;
	Repeater['tunwallL1'].End();
	Repeater['tunwallL2'].End();
	Repeater['tunwallL3'].End();
	Repeater['tunwallR1'].End();
	Repeater['tunwallR2'].End();
	Repeater['tunwallR3'].End();
	Repeater['tunwallL4'].End();
	Repeater['tunwallR4'].End();
	Repeater['tunwallL5'].End();
	Repeater['tunwallR5'].End();
	Repeater['tunwallL6'].End();
	Repeater['tunwallR6'].End();
	Repeater['tunwallL7'].End();
	Repeater['tunwallR7'].End();
	Repeater['tunwallL31'].End();
	Repeater['tunwallR31'].End();
	Repeater['tunnelwall'].Begin('1',2,-0.25,1.6, , , ,1,,4.99, 'Tunnellp');
	Repeater['tunnellight1'].Begin('1',1.999,-0.25,1.6, , , ,1,,24.99, 'tunlight');
	Structure['Tunnelpotaldark'].Put('1',2,-0.25,1.6,,,,,);
	Repeater['slabRail'].End();
	Repeater['slabRail2'].End();
	Repeater['slabRail'].Begin0('1',1,4.99,5,'slabrailtwodark');
	Repeater['slabRail2'].Begin0('2',1,4.99,5,'slabrailtwodark');
	CabIlluminance.Set(0.7);
	Fog.Interpolate(0.001,0,0,0);
21085;
	CabIlluminance.Set(0);
	Fog.Interpolate(0.01,0,0,0);
21100;
	Gradient.BeginTransition();
	Structure['TunD'].Put('1',-2.2,0.7,,,0,,,);
21500;	
	Gradient.Begin(-5);
21700;
	Gradient.BeginTransition();
21900;
	Gradient.End();
	Structure['TunL'].Put('1',-2.2,0.7,,,0,,,);
21955;
	Fog.Interpolate(0.001,0,0,0);
	Track['3'].Position(0,-0.01,0,0);
	Track['4'].Position(4,-0.01,0,0);
	JointNoise.Play(0);
21960;
	Repeater['slabRail3'].Begin0('3',1,4.99,5,'slabrailtwodark');
	Repeater['slabRail4'].Begin0('4',1,4.99,5,'slabrailtwodark');
	Repeater['kasen3'].Begin0('3',3,39.99,40,'kasen');
	Repeater['kasen4'].Begin0('4',3,39.99,40,'kasen');
	Track['3'].Position(0,-0.01,600,0);
	Track['4'].Position(4,-0.01,-600,0);
22010;
	Track['3'].Position(2,-0.01,-600,0);
	Track['4'].Position(2,-0.01,600,0);
22020;
	JointNoise.Play(0);
22050;
	CabIlluminance.Set(0);
22055;
	Repeater['tunnellight1'].End();
	Repeater['tunnelwall'].End();
	#Structure['Tunnelpotal'].Put('1',1.9,-0.25,1.6,,,,,);
	#pointroof
	Repeater['tunwallT1'].Begin('3',-0.3,6.5,0, , , -90,3,,5, 'tunwall');
	Repeater['tunwallT2'].Begin('4',0.3,6.5,0, , , -90,3,,5, 'tunwall');
	Repeater['tunwallT3'].Begin('3',-2.2,6.5,0, , , -90,3,,5, 'tunwall');
	Repeater['tunwallT4'].Begin('4',2.2,6.5,0, , , -90,3,,5, 'tunwall');
	Repeater['tunwallT5'].Begin('3',-4.1,6.5,0, , , -90,3,,5, 'tunwall');
	Repeater['tunwallT6'].Begin('4',4.1,6.5,0, , , -90,3,,5, 'tunwall');
22060;
	Track['3'].Position(4,-0.01,0,0);
	Track['4'].Position(0,-0.01,0,0);
	Repeater['slabRail3'].End();
	Repeater['slabRail4'].End();
#Ningenosato Station:
#T1=4番線,T2=5番線,T3=8番線,T4=1番線,T5=2番線,T6=3番線,T7=6番線T8=7番線
22070;
	Track['3'].Position(4,-0.01,500,0);
	Track['4'].Position(0,-0.01,-500,0);
	Repeater['slabRail3'].Begin0('3',1,4.99,5,'slabrailtwodark');
	Repeater['slabRail4'].Begin0('4',1,4.99,5,'slabrailtwodark');
	JointNoise.Play(0);
22118;
	#Repeater['tunnelwall'].Begin('1',1.9,-0.25,1.6, , , ,1,,4.99, 'Tunnellp');
	Structure['Tunwall'].Put('1',2,6.5,-4,,,-90,,);
	Structure['Tunwall'].Put('1',2,6.5,-5.9,,,-90,,);
	Structure['Tunwall'].Put('1',-2,5.5,-0.5,,90,45,,);
	Structure['Tunwall'].Put('3',-2,5.5,-0.5,,90,45,,);
	#pointroofend
	Repeater['tunwallT1'].End();
	Repeater['tunwallT2'].End();
	Repeater['tunwallT3'].End();
	Repeater['tunwallT4'].End();
	Repeater['tunwallT5'].End();
	Repeater['tunwallT6'].End();
	#Roofwide-4,5ban sen
	Repeater['tunwallL4'].Begin('1',-2.1,4.4,0, , , ,3,,5, 'tunwall');
	Repeater['tunwallR4'].Begin('2',2.1,4.4,0, , , ,3,,5, 'tunwallR');
	Repeater['tunwallL5'].Begin('1',-2.2,5.5,0, , , -45,3,,5, 'tunwall');
	Repeater['tunwallR5'].Begin('2',2.2,5.5,0,, ,45 ,3,,5, 'tunwallR');
	Repeater['tunwallL6'].Begin('1',-1.5,6.5,0, , , -90,3,,5, 'tunwall');
	Repeater['tunwallR6'].Begin('2',1.5,6.5,0,, ,90,3,,5, 'tunwallR');
	Repeater['tunwallL7'].Begin('1',0.3,6.5,0, , , -90,3,,5, 'tunwall');
	Repeater['tunwallR7'].Begin('2',-0.3,6.5,0,, ,90,3,,5, 'tunwallR');
	#wall-1ban sen
	22055;
	Repeater['tunwallL10'].Begin('4',-2.1,-1,0, , , ,3,,5, 'tunwall');
	Repeater['tunwallL20'].Begin('4',-2.1,0.8,0, , , ,3,,5, 'tunwall');
	Repeater['tunwallL30'].Begin('4',-2.1,2.6,0, , , ,3,,5, 'tunwall');
	#tunroof-1ban sen
	Repeater['tunwallL40'].Begin('4',-2.1,4.4,0, , , ,3,,5, 'tunwall');
	Repeater['tunwallL50'].Begin('4',-2.2,5.5,0, , , -45,3,,5, 'tunwall');
	Repeater['tunwallL60'].Begin('4',-1.5,6.5,0, , , -90,3,,5, 'tunwall');
	22118;
	Repeater['tunwallR10'].Begin('4',2.1,-1,0, , , ,3,,5, 'tunwallR');
	Repeater['tunwallR20'].Begin('4',2.1,0.8,0, , , ,3,,5, 'tunwallR');
	Repeater['tunwallR30'].Begin('4',2.1,2.6,0, , , ,3,,5, 'tunwallR');
	#tunroof-1ban sen
	Repeater['tunwallR40'].Begin('4',2.1,4.4,0, , , ,3,,5, 'tunwallR');
	Repeater['tunwallR50'].Begin('4',2.2,5.5,0,, ,45 ,3,,5, 'tunwallR');
	Repeater['tunwallR60'].Begin('4',1.5,6.5,0,, ,90,3,,5, 'tunwallR');
	#wall-4,5ban sen
	Repeater['tunwallL1'].Begin('1',-2.1,-1,0, , , ,3,,5, 'tunwall');
	Repeater['tunwallL2'].Begin('1',-2.1,0.8,0, , , ,3,,5, 'tunwall');
	Repeater['tunwallL3'].Begin('1',-2.1,2.6,0, , , ,3,,5, 'tunwall');	
	Repeater['tunwallR1'].Begin('2',2.1,-1,0, , , ,3,,5, 'tunwallR');
	Repeater['tunwallR2'].Begin('2',2.1,0.8,0, , , ,3,,5, 'tunwallR');
	Repeater['tunwallR3'].Begin('2',2.1,2.6,0, , , ,3,,5, 'tunwallR');
	#wall-8ban sen
	22055;
	Repeater['tunwallR18'].Begin('3',2.1,-1,0, , , ,3,,5, 'tunwallR');
	Repeater['tunwallR28'].Begin('3',2.1,0.8,0, , , ,3,,5, 'tunwallR');
	Repeater['tunwallR38'].Begin('3',2.1,2.6,0, , , ,3,,5, 'tunwallR');
	#tunroof-8ban sen
	Repeater['tunwallR48'].Begin('3',2.1,4.4,0, , , ,3,,5, 'tunwallR');
	Repeater['tunwallR58'].Begin('3',2.2,5.5,0,, ,45 ,3,,5, 'tunwallR');
	Repeater['tunwallR68'].Begin('3',1.5,6.5,0,, ,90,3,,5, 'tunwallR');
	22118;
	Repeater['tunwallL18'].Begin('3',-2.1,-1,0, , , ,3,,5, 'tunwall');
	Repeater['tunwallL28'].Begin('3',-2.1,0.8,0, , , ,3,,5, 'tunwall');
	Repeater['tunwallL38'].Begin('3',-2.1,2.6,0, , , ,3,,5, 'tunwall');
	#tunroof-8ban sen
	Repeater['tunwallL48'].Begin('3',-2.1,4.4,0, , , ,3,,5, 'tunwall');
	Repeater['tunwallL58'].Begin('3',-2.2,5.5,0, , , -45,3,,5, 'tunwall');
	Repeater['tunwallL68'].Begin('3',-1.5,6.5,0, , , -90,3,,5, 'tunwall');
22162.5;
	Track['3'].Position(16,-0.01,-500,0);
	Track['4'].Position(-12,-0.01,500,0);
22230;
	CabIlluminance.Set(0);
22235;
	Repeater['tunnelwall'].End();
	CabIlluminance.Set(0.7);
	Repeater['slabRail'].End();
	Repeater['slabRail2'].End();
	Repeater['slabRail'].Begin0('1',1,4.99,5,'slabrailtwo');
	Repeater['slabRail2'].Begin0('2',1,4.99,5,'slabrailtwo');
	Structure['Tunwall'].Put('1',-2,5,-0.01,,90,45,,);
	Structure['Tunwall'].Put('1',-1.5,4.5,-0.01,,90,90,,);
	Structure['Tunwall'].Put('1',-5,1,-0.01,,90,45,,);
	Structure['Tunwall'].Put('2',4.5,5,-0.01,,90,135,,);
	Structure['Tunwall'].Put('2',3,4.5,-0.01,,90,90,,);
	Structure['Tunwall'].Put('2',6,2,-0.01,,90,135,,);
	#口→凸
	Repeater['tunwallL31'].Begin('1',-2.6,3.1,0, , , -45,3,,5, 'tunwall');
	Repeater['tunwallR31'].Begin('2',2.6,3.1,0,, ,45 ,3,,5, 'tunwallR');
	#roofwide-end-4,5ban sen
	Repeater['tunwallL4'].End();
	Repeater['tunwallR4'].End();
	Repeater['tunwallL5'].End();
	Repeater['tunwallR5'].End();
	Repeater['tunwallL6'].End();
	Repeater['tunwallR6'].End();
	Repeater['tunwallL7'].End();
	Repeater['tunwallR7'].End();
	#roofnarrow-4,5ban sen
	Repeater['tunwallL4'].Begin('1',-1.4,4.4,0, , , ,3,,5, 'tunwall');
	Repeater['tunwallR4'].Begin('2',1.4,4.4,0, , , ,3,,5, 'tunwallR');
	Repeater['tunwallL5'].Begin('1',-1.5,5.5,0, , , -45,3,,5, 'tunwall');
	Repeater['tunwallR5'].Begin('2',1.5,5.5,0,, ,45 ,3,,5, 'tunwallR');
	Repeater['tunwallL6'].Begin('1',-1.5,6.5,0, , , -90,3,,5, 'tunwall');
	Repeater['tunwallR6'].Begin('2',1.5,6.5,0,, ,90,3,,5, 'tunwallR');
	Repeater['tunwallL7'].Begin('1',0.3,6.5,0, , , -90,3,,5, 'tunwall');
	Repeater['tunwallR7'].Begin('2',-0.3,6.5,0,, ,90,3,,5, 'tunwallR');
	#roofnarrow-6,7ban sen
	Repeater['tunwallL46'].Begin('7',-1.4,4.4,0, , , ,3,,5, 'tunwall');
	Repeater['tunwallR46'].Begin('8',1.4,4.4,0, , , ,3,,5, 'tunwallR');
	Repeater['tunwallL56'].Begin('7',-1.5,5.5,0, , , -45,3,,5, 'tunwall');
	Repeater['tunwallR56'].Begin('8',1.5,5.5,0,, ,45 ,3,,5, 'tunwallR');
	Repeater['tunwallL66'].Begin('7',-1.5,6.5,0, , , -90,3,,5, 'tunwall');
	Repeater['tunwallR66'].Begin('8',1.5,6.5,0,, ,90,3,,5, 'tunwallR');
	Repeater['tunwallL76'].Begin('7',0.3,6.5,0, , , -90,3,,5, 'tunwall');
	Repeater['tunwallR76'].Begin('8',-0.3,6.5,0,, ,90,3,,5, 'tunwallR');
	#roofnarrow-2,3ban sen
	Repeater['tunwallL42'].Begin('5',-1.4,4.4,0, , , ,3,,5, 'tunwall');
	Repeater['tunwallR42'].Begin('6',1.4,4.4,0, , , ,3,,5, 'tunwallR');
	Repeater['tunwallL52'].Begin('5',-1.5,5.5,0, , , -45,3,,5, 'tunwall');
	Repeater['tunwallR52'].Begin('6',1.5,5.5,0,, ,45 ,3,,5, 'tunwallR');
	Repeater['tunwallL62'].Begin('5',-1.5,6.5,0, , , -90,3,,5, 'tunwall');
	Repeater['tunwallR62'].Begin('6',1.5,6.5,0,, ,90,3,,5, 'tunwallR');
	Repeater['tunwallL72'].Begin('5',0.3,6.5,0, , , -90,3,,5, 'tunwall');
	Repeater['tunwallR72'].Begin('6',-0.3,6.5,0,, ,90,3,,5, 'tunwallR');
22255;
	SpeedLimit.Begin(25);
	//Structure['20'].Put('1',-2.4,0.5,0,,,,,);
	//Structure['5'].Put('1',-2.4,0.5,0,,,,,);
	//Structure['limitpole'].Put('1',-2.4,0.4,0,,,,,);
	Track['3'].Position(28,-0.01,0,0);
	Track['4'].Position(-24,-0.01,0,0);
	Track['5'].Position(-14,-0.01,0,0);
	Track['6'].Position(-10,-0.01,0,0);
	Track['7'].Position(14,-0.01,0,0);
	Track['8'].Position(18,-0.01,0,0);
	#station piers
	Repeater['pier02'].Begin('5',-4.9,10,0, ,-90,,3,,30, 'stapier');
	Repeater['pier04'].Begin('1',-4.9,10,0, ,-90,,3,,30, 'stapier');
	Repeater['pier06'].Begin('7',-4.9,10,0, ,90,,3,,30, 'stapier');
	Repeater['pier08'].Begin('3',-4.9,10,0, ,90,,3,,30, 'stapier');
	#wallend-1ban sen 
	Repeater['tunwallR10'].End();
	Repeater['tunwallR20'].End();
	Repeater['tunwallR30'].End();
	#wallend-4,5ban sen 
	Repeater['tunwallL1'].End();
	Repeater['tunwallL2'].End();
	Repeater['tunwallL3'].End();
	Repeater['tunwallR1'].End();
	Repeater['tunwallR2'].End();
	Repeater['tunwallR3'].End();
	Repeater['tunwallL31'].End();
	Repeater['tunwallR31'].End();
	#wallend-6,7ban sen 
	#wallend-8ban sen 
	Repeater['tunwallL18'].End();
	Repeater['tunwallL28'].End();
	Repeater['tunwallL38'].End();
	#wall at 1 ban sen
	Repeater['wallL1'].Begin('4',-2,1.2, 0, , , ,3,,5, 'formwallbrown');
	Repeater['wallL2'].Begin('4',-2,2.75, 0, , , ,3,,5, 'formwallwhite');
	#wall at 8 ban sen
	Repeater['wallR18'].Begin('3',2,1.2, 0, , , ,3,,5, 'formwallbrownR');
	Repeater['wallR28'].Begin('3',2,2.75, 0, , , ,3,,5, 'formwallwhiteR');
	#Formroof-1bansen
	Repeater['FormroofR11'].Begin('4',3.62,6.77,0,,,90,3,,5, 'dikewall');
	Repeater['FormroofR21'].Begin('4',5.52,6.77,0,,,90,3,,5, 'dikewall');
	#Formroof-2,3bansen
	Repeater['Formroof12'].Begin('5',-0.98,6.77,0,,,90,3,,5, 'dikewall');
	Repeater['FormroofR12'].Begin('6',3.62,6.77,0,,,90,3,,5, 'dikewall');
	Repeater['Formroof22'].Begin('5',-2.88,6.77,0,,,90,3,,5, 'dikewall');
	Repeater['FormroofR22'].Begin('6',5.52,6.77,0,,,90,3,,5, 'dikewall');
	#Formroof-4,5bansen
	Repeater['Formroof1'].Begin('1',-0.98,6.77,0,,,90,3,,5, 'dikewall');
	Repeater['FormroofR1'].Begin('2',3.62,6.77,0,,,90,3,,5, 'dikewall');
	Repeater['Formroof2'].Begin('1',-2.88,6.77,0,,,90,3,,5, 'dikewall');
	Repeater['FormroofR2'].Begin('2',5.52,6.77,0,,,90,3,,5, 'dikewall');
	#Formroof-6,7bansen
	Repeater['Formroof16'].Begin('7',-0.98,6.77,0,,,90,3,,5, 'dikewall');
	Repeater['FormroofR16'].Begin('8',3.62,6.77,0,,,90,3,,5, 'dikewall');
	Repeater['Formroof26'].Begin('7',-2.88,6.77,0,,,90,3,,5, 'dikewall');
	Repeater['FormroofR26'].Begin('8',5.52,6.77,0,,,90,3,,5, 'dikewall');
	#Formroof-8bansen
	Repeater['Formroof18'].Begin('3',-0.98,6.77,0,,,90,3,,5, 'dikewall');
	Repeater['Formroof28'].Begin('3',-2.88,6.77,0,,,90,3,,5, 'dikewall');
	#lights
	Repeater['LightL1'].Begin('1',-2.5,4.27,0,,,0,3,,3, 'light');
	Repeater['LightR1'].Begin('2',2.5,4.27,0,,,0,3,,3, 'light');
	Repeater['LightL2'].Begin('7',-2.5,4.27,0,,,0,3,,3, 'light');
	Repeater['LightR2'].Begin('8',2.5,4.27,0,,,0,3,,3, 'light');
	Repeater['LightL3'].Begin('5',-2.5,4.27,0,,,0,3,,3, 'light');
	Repeater['LightR3'].Begin('6',2.5,4.27,0,,,0,3,,3, 'light');
	Repeater['LightL4'].Begin('3',-2.5,4.27,0,,,0,3,,3, 'light');
	Repeater['LightR4'].Begin('4',2.5,4.27,0,,,0,3,,3, 'light');
	#Form
	Repeater['modernformL1'].Begin('1',0, 0, 0, , , ,3,,5, 'modernformL');
	Repeater['modernformL2'].Begin('3',0, 0, 0, , , ,3,,5, 'modernformL');
	Repeater['modernformL3'].Begin('5',0, 0, 0, , , ,3,,5, 'modernformL');
	Repeater['modernformL4'].Begin('7',0, 0, 0, , , ,3,,5, 'modernformL');
	Repeater['modernformR1'].Begin('2',0, 0, 0, , , ,3,,5, 'modernformR');
	Repeater['modernformR2'].Begin('4',0, 0, 0, , , ,3,,5, 'modernformR');
	Repeater['modernformR3'].Begin('6',0, 0, 0, , , ,3,,5, 'modernformR');
	Repeater['modernformR4'].Begin('8',0, 0, 0, , , ,3,,5, 'modernformR');
	Repeater['modernformgroundL1'].Begin('1',-0.1,0,0, , , ,3,,5, 'modernformgroundL');
	Repeater['modernformgroundR1'].Begin('2',0.1,0,0, , , ,3,,5, 'modernformgroundR');
	Repeater['modernformgroundL2'].Begin('3',-0.1,0,0, , , ,3,,5, 'modernformgroundL');
	Repeater['modernformgroundR2'].Begin('4',0.1,0,0, , , ,3,,5, 'modernformgroundR');
22380;
	Structure['E129B'].Put('2',0,0,0,,,,,);
22400;
	Structure['E129F'].Put('2',0,0,0,,,,,);
22405-300;
	Structure['300t'].Put('4',-2,0.25,0,,,,,);
22405-200;
	Structure['200t'].Put('1',-2,0.25,0,,,,,);
22405-100;
	Structure['100t'].Put('1',-2,2.3,0,,,,,);
22405;
	Station['6'].Put(1,-5,5);
	Structure['stop'].Put('1',2,-0.3,0,,,,,);
22425;
	#formend
	Repeater['pier02'].End();
	Repeater['pier04'].End();
	Repeater['pier06'].End();
	Repeater['pier08'].End();
	Repeater['modernformL1'].End();
	Repeater['modernformL2'].End();
        Repeater['modernformL3'].End();
	Repeater['modernformL4'].End();
	Repeater['modernformR1'].End();
	Repeater['modernformR2'].End();
	Repeater['modernformR3'].End();
	Repeater['modernformR4'].End();
	Repeater['modernformgroundL1'].End();
	Repeater['modernformgroundR1'].End();
	Repeater['modernformgroundL2'].End();
	Repeater['modernformgroundR2'].End();
	Track['3'].Position(28,-0.01,-500,0);
	Track['4'].Position(-24,-0.01,500,0);
	Track['5'].Position(-14,-0.01,0,0);
	Track['6'].Position(-10,-0.01,0,0);
	Track['7'].Position(14,-0.01,0,0);
	Track['8'].Position(18,-0.01,0,0);
	#wallend-1ban sen
	Repeater['wallL1'].End();
	Repeater['wallL2'].End();
	#wallend-8ban sen
	Repeater['wallR18'].End();
	Repeater['wallR28'].End();
	#Formroofend-1bansen
	Repeater['FormroofR11'].End();
	Repeater['FormroofR21'].End();
	#Formroofend-8bansen
	Repeater['Formroof28'].End();
	Repeater['Formroof18'].End();
	#Formroofend-2,3bansen
	Repeater['Formroof12'].End();
	Repeater['FormroofR12'].End();
	Repeater['Formroof22'].End();
	Repeater['FormroofR22'].End();
	#Formroofend-4,5bansen
	Repeater['Formroof1'].End();
	Repeater['FormroofR1'].End();
	Repeater['Formroof2'].End();
	Repeater['FormroofR2'].End();
	#Formroofend-6,7bansen
	Repeater['Formroof16'].End();
	Repeater['FormroofR16'].End();
	Repeater['Formroof26'].End();
	Repeater['FormroofR26'].End();
	#lightend
	Repeater['LightL1'].End();
	Repeater['LightR1'].End();
	Repeater['LightL2'].End();
	Repeater['LightR2'].End();
	Repeater['LightL3'].End();
	Repeater['LightR4'].End();
	Repeater['LightL4'].End();
	Repeater['LightR4'].End();
	#temp carstop at 4,5 ban sen
	Structure['carstop'].Put('1',0,-0,0,,,,,);
	Structure['carstop'].Put('2',0,-0,0,,,,,);
	#endwall-1ban sen
	Structure['formendfence'].Put('4',3.5,1.2,-0.3,,,,,);
	Structure['formwallbrownR'].Put('4',7.1,1.2,-0.4,,-90,,,);
	Structure['formwallwhiteR'].Put('4',7.1,2.75,-0.4,,-90,,,);
	#endwall-2,3ban sen
	Structure['formendfence'].Put('5',-3.5,1.2,-0.3,,,,,);
	Structure['formendfence'].Put('6',3.5,1.2,-0.3,,,,,);
	Structure['formwallbrown'].Put('5',-7.1,1.2,-0.4,,90,,,);
	Structure['formwallwhite'].Put('5',-7.1,2.75,-0.4,,90,,,);
	Structure['formwallbrownR'].Put('6',7.1,1.2,-0.4,,-90,,,);
	Structure['formwallwhiteR'].Put('6',7.1,2.75,-0.4,,-90,,,);
	#endwall-4,5ban sen
	Structure['formendfence'].Put('1',-3.5,1.2,-0.3,,,,,);
	Structure['formendfence'].Put('2',3.5,1.2,-0.3,,,,,);
	Structure['formwallbrown'].Put('1',-7.1,1.2,-0.4,,90,,,);
	Structure['formwallwhite'].Put('1',-7.1,2.75,-0.4,,90,,,);
	Structure['formwallbrownR'].Put('2',7.1,1.2,-0.4,,-90,,,);
	Structure['formwallwhiteR'].Put('2',7.1,2.75,-0.4,,-90,,,);
	#endwall-6,7ban sen
	Structure['formendfence'].Put('7',-3.5,1.2,-0.3,,,,,);
	Structure['formendfence'].Put('8',3.5,1.2,-0.3,,,,,);
	Structure['formwallbrown'].Put('7',-7.1,1.2,-0.4,,90,,,);
	Structure['formwallwhite'].Put('7',-7.1,2.75,-0.4,,90,,,);
	Structure['formwallbrownR'].Put('8',7.1,1.2,-0.4,,-90,,,);
	Structure['formwallwhiteR'].Put('8',7.1,2.75,-0.4,,-90,,,);
	#endwall-8ban sen
	Structure['formendfence'].Put('3',-3.5,1.2,-0.3,,,,,);
	Structure['formwallbrown'].Put('3',-7.1,1.2,-0.4,,90,,,);
	Structure['formwallwhite'].Put('3',-7.1,2.75,-0.4,,90,,,);
	#wall-4,5ban sen
	Repeater['tunwallL1'].Begin('1',-2.1,-1,0, , , ,3,,5, 'tunwall');
	Repeater['tunwallL2'].Begin('1',-2.1,0.8,0, , , ,3,,5, 'tunwall');
	Repeater['tunwallL3'].Begin('1',-2.1,2.6,0, , , ,3,,5, 'tunwall');	
	Repeater['tunwallR1'].Begin('2',2.1,-1,0, , , ,3,,5, 'tunwallR');
	Repeater['tunwallR2'].Begin('2',2.1,0.8,0, , , ,3,,5, 'tunwallR');
	Repeater['tunwallR3'].Begin('2',2.1,2.6,0, , , ,3,,5, 'tunwallR');
	#wall-6,7ban sen
	Repeater['tunwallL16'].Begin('7',-2.1,-1,0, , , ,3,,5, 'tunwall');
	Repeater['tunwallL26'].Begin('7',-2.1,0.8,0, , , ,3,,5, 'tunwall');
	Repeater['tunwallL36'].Begin('7',-2.1,2.6,0, , , ,3,,5, 'tunwall');	
	Repeater['tunwallR16'].Begin('8',2.1,-1,0, , , ,3,,5, 'tunwallR');
	Repeater['tunwallR26'].Begin('8',2.1,0.8,0, , , ,3,,5, 'tunwallR');
	Repeater['tunwallR36'].Begin('8',2.1,2.6,0, , , ,3,,5, 'tunwallR');
	#wall-2,3ban sen
	Repeater['tunwallL12'].Begin('5',-2.1,-1,0, , , ,3,,5, 'tunwall');
	Repeater['tunwallL22'].Begin('5',-2.1,0.8,0, , , ,3,,5, 'tunwall');
	Repeater['tunwallL32'].Begin('5',-2.1,2.6,0, , , ,3,,5, 'tunwall');	
	Repeater['tunwallR12'].Begin('6',2.1,-1,0, , , ,3,,5, 'tunwallR');
	Repeater['tunwallR22'].Begin('6',2.1,0.8,0, , , ,3,,5, 'tunwallR');
	Repeater['tunwallR32'].Begin('6',2.1,2.6,0, , , ,3,,5, 'tunwallR');
	#凸→口-4,5ban sen
	Repeater['tunwallL31'].Begin('1',-2.6,3.1,0, , , -45,3,,5, 'tunwall');
	Repeater['tunwallR31'].Begin('2',2.6,3.1,0,, ,45 ,3,,5, 'tunwallR');
	#凸→口-6,7ban sen
	Repeater['tunwallL316'].Begin('7',-2.6,3.1,0, , , -45,3,,5, 'tunwall');
	Repeater['tunwallR316'].Begin('8',2.6,3.1,0,, ,45 ,3,,5, 'tunwallR');
	#凸→口-2,3ban sen
	Repeater['tunwallL312'].Begin('5',-2.6,3.1,0, , , -45,3,,5, 'tunwall');
	Repeater['tunwallR312'].Begin('6',2.6,3.1,0,, ,45 ,3,,5, 'tunwallR');
22435;
	Repeater['slabRail'].End();
	Repeater['slabRail2'].End();
	Repeater['slabRail'].Begin0('1',1,4.99,5,'slabrailtwodark');
	Repeater['slabRail2'].Begin0('2',1,4.99,5,'slabrailtwodark');
	CabIlluminance.Set(0.7);
22440;
	CabIlluminance.Set(0);
22445;
	#Roofwide-4,5bansen
	Repeater['tunwallL4'].Begin('1',-2.1,4.4,0, , , ,3,,5, 'tunwall');
	Repeater['tunwallR4'].Begin('2',2.1,4.4,0, , , ,3,,5, 'tunwallR');
	Repeater['tunwallL5'].Begin('1',-2.2,5.5,0, , , -45,3,,5, 'tunwall');
	Repeater['tunwallR5'].Begin('2',2.2,5.5,0,, ,45 ,3,,5, 'tunwallR');
	Repeater['tunwallL6'].Begin('1',-1.5,6.5,0, , , -90,3,,5, 'tunwall');
	Repeater['tunwallR6'].Begin('2',1.5,6.5,0,, ,90,3,,5, 'tunwallR');
	Repeater['tunwallL7'].Begin('1',0.3,6.5,0, , , -90,3,,5, 'tunwall');
	Repeater['tunwallR7'].Begin('2',-0.3,6.5,0,, ,90,3,,5, 'tunwallR');
	Repeater['tunwallL31'].End();
	Repeater['tunwallR31'].End();
	#Roofwide-6,7bansen
	Repeater['tunwallL46'].Begin('7',-2.1,4.4,0, , , ,3,,5, 'tunwall');
	Repeater['tunwallR46'].Begin('8',2.1,4.4,0, , , ,3,,5, 'tunwallR');
	Repeater['tunwallL56'].Begin('7',-2.2,5.5,0, , , -45,3,,5, 'tunwall');
	Repeater['tunwallR56'].Begin('8',2.2,5.5,0,, ,45 ,3,,5, 'tunwallR');
	Repeater['tunwallL66'].Begin('7',-1.5,6.5,0, , , -90,3,,5, 'tunwall');
	Repeater['tunwallR66'].Begin('8',1.5,6.5,0,, ,90,3,,5, 'tunwallR');
	Repeater['tunwallL76'].Begin('7',0.3,6.5,0, , , -90,3,,5, 'tunwall');
	Repeater['tunwallR76'].Begin('8',-0.3,6.5,0,, ,90,3,,5, 'tunwallR');
	Repeater['tunwallL316'].End();
	Repeater['tunwallR316'].End();
	#Roofwide-2,3bansen
	Repeater['tunwallL42'].Begin('5',-2.1,4.4,0, , , ,3,,5, 'tunwall');
	Repeater['tunwallR42'].Begin('6',2.1,4.4,0, , , ,3,,5, 'tunwallR');
	Repeater['tunwallL52'].Begin('5',-2.2,5.5,0, , , -45,3,,5, 'tunwall');
	Repeater['tunwallR52'].Begin('6',2.2,5.5,0,, ,45 ,3,,5, 'tunwallR');
	Repeater['tunwallL62'].Begin('5',-1.5,6.5,0, , , -90,3,,5, 'tunwall');
	Repeater['tunwallR62'].Begin('6',1.5,6.5,0,, ,90,3,,5, 'tunwallR');
	Repeater['tunwallL72'].Begin('5',0.3,6.5,0, , , -90,3,,5, 'tunwall');
	Repeater['tunwallR72'].Begin('6',-0.3,6.5,0,, ,90,3,,5, 'tunwallR');
	Repeater['tunwallL312'].End();
	Repeater['tunwallR312'].End();
22517.5;
	Track['3'].Position(16,-0.01,500,0);
	Track['4'].Position(-12,-0.01,-500,0);
22550;
#End of station tunnel
	#1bansen
	Repeater['tunwallL10'].End();
	Repeater['tunwallL20'].End();
	Repeater['tunwallL30'].End();
	Repeater['tunwallL40'].End();
	Repeater['tunwallL50'].End();
	Repeater['tunwallL60'].End();
	Repeater['tunwallR10'].End();
	Repeater['tunwallR20'].End();
	Repeater['tunwallR30'].End();
	Repeater['tunwallR40'].End();
	Repeater['tunwallR50'].End();
	Repeater['tunwallR60'].End();
	#2,3bansen
	Repeater['tunwallL12'].End();
	Repeater['tunwallL22'].End();
	Repeater['tunwallL32'].End();
	Repeater['tunwallR12'].End();
	Repeater['tunwallR22'].End();
	Repeater['tunwallR32'].End();
	Repeater['tunwallL312'].End();
	Repeater['tunwallR312'].End();
	Repeater['tunwallL42'].End();
	Repeater['tunwallR42'].End();
	Repeater['tunwallL52'].End();
	Repeater['tunwallR52'].End();
	Repeater['tunwallL62'].End();
	Repeater['tunwallR62'].End();
	Repeater['tunwallL72'].End();
	Repeater['tunwallR72'].End();
	#4,5bansen
	Repeater['tunwallL1'].End();
	Repeater['tunwallL2'].End();
	Repeater['tunwallL3'].End();
	Repeater['tunwallR1'].End();
	Repeater['tunwallR2'].End();
	Repeater['tunwallR3'].End();
	Repeater['tunwallL31'].End();
	Repeater['tunwallR31'].End();
	Repeater['tunwallL4'].End();
	Repeater['tunwallR4'].End();
	Repeater['tunwallL5'].End();
	Repeater['tunwallR5'].End();
	Repeater['tunwallL6'].End();
	Repeater['tunwallR6'].End();
	Repeater['tunwallL7'].End();
	Repeater['tunwallR7'].End();
	#6,7bansen
	Repeater['tunwallL16'].End();
	Repeater['tunwallL26'].End();
	Repeater['tunwallL36'].End();
	Repeater['tunwallR16'].End();
	Repeater['tunwallR26'].End();
	Repeater['tunwallR36'].End();
	Repeater['tunwallL316'].End();
	Repeater['tunwallR316'].End();
	Repeater['tunwallL46'].End();
	Repeater['tunwallR46'].End();
	Repeater['tunwallL56'].End();
	Repeater['tunwallR56'].End();
	Repeater['tunwallL66'].End();
	Repeater['tunwallR66'].End();
	Repeater['tunwallL76'].End();
	Repeater['tunwallR76'].End();
	#8bansen
	Repeater['tunwallL18'].End();
	Repeater['tunwallL28'].End();
	Repeater['tunwallL38'].End();
	Repeater['tunwallL48'].End();
	Repeater['tunwallL58'].End();
	Repeater['tunwallL68'].End();
	Repeater['tunwallR18'].End();
	Repeater['tunwallR28'].End();
	Repeater['tunwallR48'].End();
	Repeater['tunwallR58'].End();
	Repeater['tunwallR68'].End();
22610;
	Track['3'].Position(4,-0.01,0,0);
	Track['4'].Position(0,-0.01,0,0);
	Repeater['tunnelwall'].Begin('1',2,-0.25,1.6, , , ,1,,4.99, 'Tunnellp');
	Structure['Tunnelpotaldark'].Put('1',2,-0.25,1.6,,,,,);
25000;
	Repeater['slabRail'].End();
	Repeater['slabRail2'].End();
	Repeater['slabRail3'].End();
	Repeater['slabRail4'].End();
	Repeater['kasen1'].End();
	Repeater['kasen2'].End();
	Repeater['kasen3'].End();
	Repeater['kasen4'].End();

